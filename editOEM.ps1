# Very simple script to change your OEM information
# Made by Teeotsa
# Github : https://github.com/teeotsa

If (!([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]'Administrator')) {
	Start-Process powershell.exe "-NoProfile -ExecutionPolicy Bypass -File `"$PSCommandPath`"" -Verb RunAs
	Exit
}

$Desktop = "$env:SystemDrive\Users\$env:USERNAME\Desktop";

function makeFile{
	if (Test-Path "$Desktop\OEM.txt"){
		Remove-Item -Path "$Desktop\OEM.txt" -Force | Out-Null
	}
	New-Item -Path "$Desktop\OEM.txt" -Force | Out-Null
	Set-Content -Path "$Desktop\OEM.txt" ("This file was generated by Teeotsa's OEM script!
	
");
	<#

	if (Test-Path "$Desktop\OEM.txt"){
		Add-Content -Path "$Desktop\OEM.txt" ""
	}

	#>
}
makeFile

# path to registry key
$Path = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation";

# removes registry key to reset everything
if (Test-Path $Path){
    Remove-Item -Path $Path -Force | Out-Null
}
# create new registry key if its not there
if (!(Test-Path $Path)){
    New-Item -Path $Path -Force | Out-Null
}

function askManufacturer{
	$Answer = read-Host "Manufacturer ";
	$MaxChars = 15;
	if ($Answer.Length -gt $MaxChars){
		Write-Warning "Please dont use longer manufacturer name than $MaxChars characters"
		Start-Sleep -Seconds 2
		askManufacturer
		return
	}
	Set-ItemProperty -Path $Path -Name "Manufacturer" -Value $Answer -Type String
	if (Test-Path "$Desktop\OEM.txt"){
		Add-Content -Path "$Desktop\OEM.txt" "Manufacturer : $Answer"
	}
}
askManufacturer

Clear-Host

function askModel{
	$Answer = read-Host "Model ";
	$MaxChars = 15;
	if ($Answer.Length -gt $MaxChars){
		Write-Warning "Please dont use longer model name than $MaxChars characters"
		Start-Sleep -Seconds 2
		askModel
		return
	}
	Set-ItemProperty -Path $Path -Name "Model" -Value $Answer -Type String
	if (Test-Path "$Desktop\OEM.txt"){
		Add-Content -Path "$Desktop\OEM.txt" "Model : $Answer"
	}
}
askModel

Clear-Host

function askSupportHours{
	$Answer = read-Host "Support Hours ";
	$MaxChars = 15;
	if ($Answer.Length -gt $MaxChars){
		Write-Warning "Please dont use longer Support Hours string than $MaxChars characters"
		Start-Sleep -Seconds 2
		askSupportHours
		return
	}
	Set-ItemProperty -Path $Path -Name "SupportHours" -Value $Answer -Type String
	if (Test-Path "$Desktop\OEM.txt"){
		Add-Content -Path "$Desktop\OEM.txt" "Support Hours : $Answer"
	}
}
askSupportHours

Clear-Host

function askSupportURL{
	$Answer = read-Host "Support Hours (NOTE! You can actually use this to launch some programs like notepad)";
	Set-ItemProperty -Path $Path -Name "SupportURL" -Value $Answer -Type String
	if (Test-Path "$Desktop\OEM.txt"){
		Add-Content -Path "$Desktop\OEM.txt" "SupportURL/Script : $Answer"
	}
}
askSupportURL


# $LogoPath = [UR LOGO PATH HERE] / bmp files only
# Set-ItemProperty -Path $Path -Name "Logo" -Value $LogoPath -Type String

# Set-ItemProperty -Path $Path -Name "Model" -Value "Made by Teeotsa & Rafium" -Type String

# Set-ItemProperty -Path $Path -Name "SupportHours" -Value "xdddddddddddddddddddddd" -Type String

# Set-ItemProperty -Path $Path -Name "SupportURL" -Value "C:\Users\* * * * * *\Desktop\OEM\info.txt" -Type String
# SupportHours
# SupportURL